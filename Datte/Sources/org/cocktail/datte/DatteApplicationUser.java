// Generated by the WOLips Templateengine Plug-in at 17 sept. 2010 15:56:38

/*******************************************************************************
 *  Copyright CONSORTIUM COCKTAIL (www.cocktail.org), 1995, 2008
 *  
 *  This software is governed by the CeCILL license under French law and abiding
 *  by the rules of distribution of free software. You can use, modify and/or
 *  redistribute the software under the terms of the CeCILL license as circulated
 *  by CEA, CNRS and INRIA at the following URL "http://www.cecill.info".
 *  
 *  As a counterpart to the access to the source code and rights to copy, modify
 *  and redistribute granted by the license, users are provided only with a
 *  limited warranty and the software's author, the holder of the economic
 *  rights, and the successive licensors have only limited liability.
 *  
 *  In this respect, the user's attention is drawn to the risks associated with
 *  loading, using, modifying and/or developing or reproducing the software by
 *  the user in light of its specific status of free software, that may mean that
 *  it is complicated to manipulate, and that also therefore means that it is
 *  reserved for developers and experienced professionals having in-depth
 *  computer knowledge. Users are therefore encouraged to load and test the
 *  software's suitability as regards their requirements in conditions enabling
 *  the security of their systems and/or data to be ensured and, more generally,
 *  to use and operate it in the same conditions as regards security.
 *  
 *  The fact that you are presently reading this means that you have had
 *  knowledge of the CeCILL license and that you accept its terms.
 * 
 *******************************************************************************/

package org.cocktail.datte;

import org.cocktail.fwkcktldroitsutils.common.metier.EOUtilisateur;
import org.cocktail.fwkcktldroitsutils.common.ApplicationUser;
import org.cocktail.fwkcktlpersonne.common.metier.EOIndividu;
import org.cocktail.fwkcktlpersonne.common.metier.EORepartStructure;
import org.cocktail.scolarix.serveur.metier.eos.EOPreCandidat;
import org.cocktail.scolarix.serveur.metier.eos.EOPreEtudiant;
import org.cocktail.scolarix.serveur.metier.eos.EORepartitionCompte;

import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOQualifier;
import com.webobjects.foundation.NSArray;

/**
 * Représente un utilisateur de l'application Datte.
 * Seules les specificites exclusives à l'application sont decrites dans cette classe
 */

public class DatteApplicationUser extends ApplicationUser {

	private boolean isEtudiant;
	private boolean isGestionnaire;
	private EOIndividu individu;


	private void initUser(EOEditingContext ec, Integer persId, String cStructure) {
		System.out.println("Dans initUser ... ");
		EOQualifier qualifier = EOQualifier.qualifierWithQualifierFormat(EOPreEtudiant.NO_INDIVIDU_KEY + "=%@", 
				new NSArray( getNoIndividu()));
		EOPreEtudiant etudiant = EOPreEtudiant.fetchByQualifier(ec, qualifier);
		if (etudiant == null) isEtudiant = false; 
		else {
			EOPreCandidat candidat = EOPreCandidat.fetchByKeyValue(ec, EOPreCandidat.ETUD_NUMERO_KEY, etudiant.etudNumero());
		
			if (candidat == null) isEtudiant = false;
			else isEtudiant = true;
		}
		
//		qualifier = EOQualifier.qualifierWithQualifierFormat("persId = %@ AND cStructure = %@",
//				new NSArray(new Object[] { persId, cStructure}));
//		EORepartStructure struct = EORepartStructure.fetchByQualifier(ec, qualifier);
		
	}
	
	
	public DatteApplicationUser(EOEditingContext ec, Integer persId, String cStructure) {
		super(ec, persId);
		initUser(ec, persId, cStructure);
	}

	public DatteApplicationUser(EOEditingContext ec, EOUtilisateur utilisateur) {
		super(ec, utilisateur);
		initUser(ec, utilisateur.noIndividu(), null);
	}

	/** 
	 * Les apis suivantes necessitent l'identification de l'application via les tables de Jefy_admin
	 * @link https://sites.google.com/a/cocktail.org/developpeurs/wo#TOC-D-l-guer-la-gestion-des-droits-d-un
	 * 
	 */
	public DatteApplicationUser(EOEditingContext ec, String tyapStrId, Integer persId) {
		super(ec, tyapStrId, persId);
		initUser(ec, persId, null);
	}

	public DatteApplicationUser(EOEditingContext ec, String tyapStrId, EOUtilisateur utilisateur) {
		super(ec, tyapStrId, utilisateur);
		initUser(ec, utilisateur.noIndividu(), null);
	}

	public boolean isEtudiant() {
		return isEtudiant;
	}

	public boolean isGestionnaire() {
		return isGestionnaire;
	}

	public void  setGestionnaire(boolean gestionnaire) {
		isGestionnaire = gestionnaire;
	}

	public EOIndividu getIndividu() {
		return individu;
	}

}
